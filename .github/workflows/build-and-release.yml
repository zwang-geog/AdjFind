name: Build and Release (Cross-Platform Compatible)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    # Using older OS versions for better backward compatibility
    # Ubuntu 18.04 → Compatible with Ubuntu 16.04+, Debian 9+, CentOS 7+
    # macOS 12 → Compatible with macOS 10.15+  
    # Windows 2019 → Compatible with Windows 10 1809+
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-12, windows-2019]
        include:
          - os: ubuntu-18.04
            package_manager: apt
            gdal_version: "2.4.0"
            compatibility_note: "Compatible with Ubuntu 16.04+, Debian 9+, CentOS 7+"
          - os: macos-12
            package_manager: brew
            gdal_version: "3.4.0"
            compatibility_note: "Compatible with macOS 10.15+"
          - os: windows-2019
            package_manager: choco
            gdal_version: "3.4.0"
            compatibility_note: "Compatible with Windows 10 1809+"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.13

    - name: Setup C++ compiler
      uses: ms-vscode-actions/vscode-cpptools-actions/actions@v1
      with:
        compiler: gcc
        version: 9

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgdal-dev libboost-all-dev nlohmann-json3-dev

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install gdal boost nlohmann-json

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install gdal boost nlohmann-json

    - name: Create build directory
      run: mkdir build

    - name: Configure with CMake
      run: |
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-static-libgcc -static-libstdc++"

    - name: Build project
      run: |
        cd build
        cmake --build . --config Release --parallel

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: adjfind-${{ matrix.os }}-${{ matrix.compatibility_note }}
        path: build/adjfind*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/adjfind-ubuntu-18.04-Ubuntu 16.04+, Debian 9+, CentOS 7+/adjfind
          artifacts/adjfind-macos-12-macOS 10.15+/adjfind
          artifacts/adjfind-windows-2019-Windows 10 1809+/adjfind.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
